\relax 
\citation{pmid16056220}
\citation{pmid18660515}
\citation{pmid21576222}
\citation{pmid19023044}
\citation{pmid18809713}
\citation{pmid23953119}
\citation{pmid5420325}
\citation{ukkonen}
\newlabel{^_1}{{}{1}}
\@writefile{toc}{\contentsline {section}{\numberline {1}Introduction}{1}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Methods}{1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {{2.1}}Inexact string matching using tries}{1}}
\citation{ukkonen}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Needleman-Wunsch (NW) alignment. \textbf  {a} Alignment of GTTGCA and GATCCA using the NW alignment matrix. The margins (purple) are initialized and the cells of the matrix (yellow) are computed from left to right and from top to bottom by the following dynamic programming algorithm. The value in each cell is computed from the values of the neighboring top, left and top-left cells. Denoting $a$, $b$ and $c$ these respective terms, the value in the cell of coordinates $(i,j)$ is computed as $\qopname  \relax m{min}(a+1, b+1, c)$ if the $i$-th letter from the first sequence is identical to the $j$-th letter from the second, or $\qopname  \relax m{min}(a+1, b+1, c+1)$ if the letters are different. The Levenshtein distance between the two sequences is found in the bottom right cell. \textbf  {b} Lower complexity algorithm to determine whether GTTGCA and GATCCA are 2-neighbors. The values in purple cells are set during initialization. The dynamic programming algorithm proceeds as above, with the difference that it is interrupted if the value of a diagonal cell (bold borders) is larger than 2. The values in purple cells are not always the same as their equivalent in a (purple arrow), but the values in the yellow cells are nevertheless identical. The values of the white cells are never computed, which contributes to making the algorithm less complex.}}{2}}
\newlabel{fig:NW}{{1}{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {{2.2}}The poucet search algorithm}{2}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces Trie query with NW alignment. Each sequence of the index is a path in the trie. The query GTTGCA is written at the top of a NW matrix, which is initialized as shown on Figure\nobreakspace  {}1\hbox {}b. The trie is traversed by a depth-first search (red path) from the root. At each depth, the node added to the path is written on the left of the NW matrix and the row is computed. Checkpoints from 1 to 4 (circled red numbers) show the state of the NW matrix as the search proceeds. The node labelled 3 is a leaf and thus corresponds to a 2-neighbor of the query. The search path then backtracks to the node labelled 2 and the last rows of the NW are erased. The search path then goes to node labelled 4, in which case the newly computed diagonal cell exceeds the threshold (circled in red). Even if this node has children, they are not visited (red crosses).}}{2}}
\newlabel{fig:trie}{{2}{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {{2.3}}Lookup search}{2}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces Poucet search algorithm. The algorithm proceeds with the same principles as shown on Figure\nobreakspace  {}2\hbox {} with the difference that the NW matrix is not updated row-wise, but along horizontally flipped L shapes. As the depth-first search proceeds, these values are stored in the nodes of the trie. Only the nodes at the top contain initialized values; for the other nodes, the values at the border are implicitly known to be 3. Since the values in the vertical part of the flipped L are the same for every child of the same node, they are computed only once (purple arrow). The values in the grey cells will be computed as the search path (red) visits the node. Storing the intermediates in the nodes allows the next query to restart at depth $k$ if it shares a common prefix of length $k$ with the current query.}}{3}}
\newlabel{fig:poucet}{{3}{3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {{2.4}}Seek and construct}{3}}
\@writefile{loa}{\contentsline {algorithm}{\numberline {1}{\ignorespaces Starcode algorithm}}{3}}
\newlabel{alg:starcode}{{1}{3}}
\@writefile{loa}{\contentsline {algorithm}{\numberline {2}{\ignorespaces Poucet search algorithm}}{3}}
\newlabel{alg:poucet}{{2}{3}}
\citation{pmid23953119}
\citation{mackay}
\citation{pmid23060610}
\citation{pmid20709691}
\citation{pmid23953119}
\@writefile{toc}{\contentsline {subsection}{\numberline {{2.5}}Parallelization}{4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {{2.6}}Clustering}{4}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Results}{4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {{3.1}}Performance}{4}}
\newlabel{performance}{{{3.1}}{4}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces Scalability. a. Logarithm of the running time versus the logarithm of the number of sequences to be clustered. b. Running time as a function of the clustering distance. c. Running time versus length of the input sequences. d. Relative performance increase for different number of parallel threads. }}{4}}
\newlabel{fig:perf}{{4}{4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {{3.2}}Benchmark against sequence clustering algorithms}{4}}
\citation{pmid23060610}
\citation{pmid22388286}
\citation{pmid19451168}
\citation{pmid23103880}
\citation{pmid23953119}
\citation{pmid23953119}
\@writefile{lot}{\contentsline {table}{\numberline {1}{\ignorespaces Software execution parameters}}{5}}
\newlabel{tab:soft-options}{{1}{5}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces Benchmark of starcode against sequence clustering algorithms and short read mappers. \textbf  {a} Running time compared to CD-HIT and UCLUST on the dataset described in the text. \textbf  {b} Error rate compared to CD-HIT and UCLUST, expressed as the percentage of clusters failing to be merged. \textbf  {c} Running time compared to Bowtie2, BWA and GEM on this dataset. The running time is decomposed in extraction of unique sequences (purple), Burrows-Wheeler indexing (yellow), and query proper (white). The extraction was performed with the Linux sort command, so the time is the same in every case. \textbf  {d} Error rate compared to Bowtie2, BWA and GEM, expressed as the proportion of matches with a single hit. This is an underestimate of the true error rate.}}{5}}
\newlabel{fig:benchmark}{{5}{5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {{3.3}}Benchmark against short read mappers}{5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {{3.4}}Clustering TRIP barcodes}{5}}
\citation{pmid10673000}
\citation{pmid19561594}
\citation{pmid23562324}
\bibstyle{natbib}
\bibdata{document}
\@writefile{toc}{\contentsline {subsection}{\numberline {{3.5}}Identifying enriched sequence motifs}{6}}
\@writefile{toc}{\contentsline {section}{\numberline {4}Discussion and conclusion}{6}}
\@writefile{toc}{\contentsline {paragraph}{Funding\text  {\rm  :}}{6}}
\bibcite{pmid23953119}{{1}{2013}{{Akhtar {\em  et~al.}}}{{Akhtar, de~Jong, Pindyurin, Pagie, Meuleman, de~Ridder, Berns, Wessels, van Lohuizen, and van Steensel}}}
\bibcite{pmid18660515}{{2}{2008}{{Dohm {\em  et~al.}}}{{Dohm, Lottaz, Borodina, and Himmelbauer}}}
\bibcite{pmid20709691}{{3}{2010}{{Edgar}}{{Edgar}}}
\bibcite{pmid19023044}{{4}{2009}{{Eid {\em  et~al.}}}{{Eid, Fehr, Gray, Luong, Lyle, Otto, Peluso, Rank, Baybayan, Bettman, Bibillo, Bjornson, Chaudhuri, Christians, Cicero, Clark, Dalal, Dewinter, Dixon, Foquet, Gaertner, Hardenbol, Heiner, Hester, Holden, Kearns, Kong, Kuse, Lacroix, Lin, Lundquist, Ma, Marks, Maxham, Murphy, Park, Pham, Phillips, Roy, Sebra, Shen, Sorenson, Tomaney, Travers, Trulson, Vieceli, Wegener, Wu, Yang, Zaccarin, Zhao, Zhong, Korlach, and Turner}}}
\bibcite{pmid23060610}{{5}{2012}{{Fu {\em  et~al.}}}{{Fu, Niu, Zhu, Wu, and Li}}}
\bibcite{pmid22388286}{{6}{2012}{{Langmead and Salzberg}}{{Langmead and Salzberg}}}
\bibcite{pmid19451168}{{7}{2009}{{Li and Durbin}}{{Li and Durbin}}}
\bibcite{mackay}{{8}{2002}{{MacKay}}{{MacKay}}}
\bibcite{pmid23103880}{{9}{2012}{{Marco-Sola {\em  et~al.}}}{{Marco-Sola, Sammeth, Guig√≥, and Ribeca}}}
\bibcite{pmid16056220}{{10}{2005}{{Margulies {\em  et~al.}}}{{Margulies, Egholm, Altman, Attiya, Bader, Bemben, Berka, Braverman, Chen, Chen, Dewell, Du, Fierro, Gomes, Godwin, He, Helgesen, Ho, Ho, Irzyk, Jando, Alenquer, Jarvie, Jirage, Kim, Knight, Lanza, Leamon, Lefkowitz, Lei, Li, Lohman, Lu, Makhijani, McDade, McKenna, Myers, Nickerson, Nobile, Plant, Puc, Ronan, Roth, Sarkis, Simons, Simpson, Srinivasan, Tartaro, Tomasz, Vogt, Volkmer, Wang, Wang, Weiner, Yu, Begley, and Rothberg}}}
\bibcite{pmid21576222}{{11}{2011}{{Nakamura {\em  et~al.}}}{{Nakamura, Oshima, Morimoto, Ikeda, Yoshikawa, Shiwa, Ishikawa, Linak, Hirai, Takahashi, Altaf-Ul-Amin, Ogasawara, and Kanaya}}}
\bibcite{pmid5420325}{{12}{1970}{{Needleman and Wunsch}}{{Needleman and Wunsch}}}
\bibcite{pmid23562324}{{13}{2013}{{Pandit {\em  et~al.}}}{{Pandit, Zhou, Shiue, Coutinho-Mansfield, Li, Qiu, Huang, Yeo, Ares, and Fu}}}
\bibcite{pmid19561594}{{14}{2009}{{Ray {\em  et~al.}}}{{Ray, Kazan, Chan, Castillo, Chaudhry, Talukder, Blencowe, Morris, and Hughes}}}
\bibcite{pmid18809713}{{15}{2008}{{Schepers {\em  et~al.}}}{{Schepers, Swart, van Heijst, Gerlach, Castrucci, Sie, Heimerikx, Velds, Kerkhoven, Arens, and Schumacher}}}
\bibcite{pmid10673000}{{16}{1999}{{Smith {\em  et~al.}}}{{Smith, Gwinn, and Salzberg}}}
\bibcite{ukkonen}{{17}{1995}{{Ukkonen}}{{Ukkonen}}}
\bibcite{pmid12601174}{{18}{2003}{{van Steensel {\em  et~al.}}}{{van Steensel, Delrow, and Bussemaker}}}
\global\@namedef{@lastpage@}{7}
